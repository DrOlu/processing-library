// Copyright (C) 2019 RunwayML Examples
// 
// This file is part of RunwayML Examples.
// 
// Runway-Examples is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
// 
// Runway-Examples is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
// 
// You should have received a copy of the GNU General Public License
// along with RunwayML.  If not, see <http://www.gnu.org/licenses/>.
// 
// ===========================================================================

// RUNWAYML
// www.runwayml.com

// Progressive Growing of GANs PGAN Demo:
// Receive HTTP messages from Runway
// Running Progressive-Growing-of-GANs-PGAN
// Example by George Profenza

// import Runway library
import com.runwayml.*;
// reference to runway instance
RunwayHTTP runway;

// Storage for received Runway image data
PImage runwayResult;

// example input vector
String input = "{\"z\":[-0.04546146508023558,-0.183417009408042,0.06709396792759943,0.05009005418849817,0.07993961926997016,0.1006581177839288,-0.03847648244877874,0.07075734742776933,-0.01285367290268606,-0.1680671015100548,0.050452635015064334,0.07206930687064227,-0.029420342804443625,-0.0184861030584279,-0.017614630241582954,-0.016516496513526473,0.04004808648616119,0.020784471794549612,0.04450035104026209,-0.06447344288587598,-0.03951933858874077,-0.033504905557670925,-0.07451300900100093,-0.029691500242737978,-0.06791423177907586,0.027441458019348886,0.15479533771849185,0.022192129618223762,0.061997428522803856,0.020304329937480076,-0.004056396653512232,0.13235058123093832,0.11406958257119812,-0.051012196954804315,0.0848899284772862,0.056403141670803715,0.045276885746116095,-0.04362301783568165,-0.0064384065320379075,-0.014979737051389247,-0.029276697260501656,0.11221001215840516,-0.08519520494174165,-0.04991511342767781,-0.08341965282573799,0.14935394530471727,0.06133184429524236,-0.014562644345469864,-0.09752008188128344,-0.0954862862342822,0.10563733628772772,-0.022483118763654344,-0.1193593809950613,-0.04079875535479274,0.033198645949731015,0.037102464254645084,-0.06616407116807071,-0.02155311725804395,0.043715825476423935,0.1357082035691139,-0.08439152777699513,0.034137371022323004,-0.11861757966908607,0.08514107284735319,-0.0784332406491447,-0.09851622932364494,-0.05924448747465456,0.02995292238865641,0.09562736517886924,-0.09178036159719999,0.10192884706623605,-0.01712227877644676,0.09228505944068453,-0.12150800557815854,0.04356943342453015,-0.12081484731769364,-0.12091919371208365,-0.016575138076061757,0.0011245389029938511,0.1471104727884392,0.1878758024836397,0.0255076723668734,0.13008024389430856,-0.05445221133871436,0.05251466541457527,-0.0546985516330242,0.101792504157075,0.0375587751080914,0.09703366460527622,-0.0433676404693394,-0.013549173252060665,0.12076852742465684,-0.0032814232266184934,0.057330128385339886,0.06777309281157776,0.11784147353999047,0.005084087110782095,-0.047074625620582976,0.16420208619564902,0.1482671509237997,0.005636330257200686,-0.07472141631293863,0.03628323911197885,-0.1586574491601632,-0.1372762730665119,-0.09722731100119489,-0.03044660947347877,0.018679111841121976,-0.014504868026650672,0.10370419661419386,0.07822656169737567,-0.030995231030223596,0.014223025081227688,0.04031852069450896,0.02086273989290757,0.05228164961184479,0.03999511285258493,-0.12133141851379224,-0.16646819291354556,-0.21074492232522263,0.13076075487179822,-0.03718798114438759,-0.004486132541491328,-0.0926156409858346,-0.10585631421920541,0.001314697728784689,-0.05890164759799909,-0.1192891700216828,-0.009648385379114735,-0.03464302059241668,0.06798815288730105,0.09024395618888881,0.10975658132552785,-0.012982418694898482,0.12487569584645061,-0.07813179270890414,-0.06573604468855186,0.08834279721673942,0.14390397072720232,0.0924531579068244,-0.1097684807081652,0.037560345466982996,0.02275097945070624,0.012013410773593323,-0.05566370120119126,-0.005541965933061006,0.01781226676375232,-0.0684348603148772,0.006548183825695893,-0.0748850790979795,-0.06901471478027214,0.16566182378529148,-0.0866559427530906,-0.015007004974095704,0.11331837652510317,-0.040695727547826965,-0.02604197442219486,0.03859349345999691,-0.04355992574336735,0.10510889331049483,-0.05731480626994981,-0.06185380565327062,0.09700758563350598,0.12414333964588974,0.1302287589814074,0.013217334813950807,-0.007241123874187093,0.09621880744276354,0.07017032032381362,-0.008004786304871343,0.10718449867299408,-0.016885353376601693,-0.12111821193531809,0.015499646494946673,0.025874612626933306,-0.13593905556225996,0.0011111460658997027,-0.0850753492895467,0.041473620635406286,-0.05560685335459134,-0.013905423101017979,0.029314811739187444,-0.02622595553332247,-0.1294706898432267,-0.06590029541280137,-0.0188414382583814,0.137934737429985,-0.03535109329167067,-0.08061126834213292,0.02986093073965327,0.013530489834171539,-0.030817289334262234,0.08295837961529806,-0.07601208571846246,0.0383500922190447,0.042907342886825905,0.07312897331315191,-0.03456390130050857,-0.10590778869876177,0.09281033535234509,0.08802936549808879,0.08526333798795628,-0.054972732545703555,0.017595338636067583,-0.06742180485237646,-0.019690521055733778,-0.11710267900743628,-0.08904508927327007,0.16908730416848355,-0.02960690142605807,0.0393341680002927,0.005034734778259057,0.046626066135052546,0.06388477779940452,0.01830013321802077,-0.012836788340464322,-0.005699123260600805,-0.004941147616325375,-0.11545272463697451,-0.10073374002758935,0.04543187321057174,0.10187833026088962,-0.11931523531984305,0.14907041714601338,0.02038557941055793,-0.06661429850973888,-0.022738907334563227,0.0022561422441426324,-0.020486849041108257,0.014324028674674645,-0.09125018805696955,-0.14819753139406122,-0.02888302604625791,-0.10172761167281373,0.05907058060115446,0.004563142532051286,-0.11048236137330311,-0.10417909896775684,0.06445286402753461,0.052593751393696465,-0.010118338038736258,-0.018845721910608043,0.020058118455018023,-0.22641616668444725,0.05634383556426484,0.0662114237529611,0.060396400109052506,-0.02491190899347267,-0.13588002059547333,-0.00998793512061176,0.031285014470771325,-0.11334010585179091,0.024614956037965083,-0.005033097123865807,-0.05783013787932274,0.02043104617089319,0.06432309329396087,-0.026126273790888534,-0.05186822870901857,0.005035052763425009,-0.09429600590222066,0.09381729402710351,0.006604503486957111,-0.13189482784501372,-0.06350620991390152,-0.0023343788625880407,0.045264841410804835,-0.18382325203158512,0.15718958892078683,-0.04477552321615909,0.1453489006844059,-0.011980075114751729,-0.07723972485373401,-0.0067136001963541,0.15850551927208822,-0.08608763083352847,0.05754612325055622,-0.02786641375980537,0.15286658412884618,0.07515788696168765,-0.018963972803177007,0.11130658028115994,-0.05723734240056843,0.09739259027574698,0.08727309972597452,-0.004039897714664981,-0.02810152653385281,0.17837558605733778,-0.06831596419056918,-0.05535842955562788,-0.04907415040139302,-0.12603171471539815,-0.02368492985525076,-0.20420718769782156,-0.1168164037467544,-0.01669061067235414,0.09486249819314563,0.038097755115192526,-0.044705447168734966,0.01066959155287893,0.012557988063022652,0.11614287240452838,0.07627327968830805,0.0656854317980403,-0.0902172923817774,0.0801173896519202,0.07800755504174015,0.009880349928228225,0.027699620477594215,0.10476217486997168,-0.05375924894675376,0.04356332756629638,-0.023926940461543412,0.05670850251089345,-0.035696581561092774,0.0366349217157121,0.022936742045807222,0.10557907392201499,-0.08089300958425827,-0.010826598245646895,-0.030904550495235862,-0.08286654804470743,0.011070091670246814,-0.10893261100893196,0.08594026565066126,0.023197326314343764,0.04094831862619211,-0.08499486422559954,-0.05191848697012054,0.160674829319916,-0.029434364523746388,0.016633418825308166,-0.03284772452800992,0.052491053205529624,-0.15835701827835144,-0.13776171433586087,0.121247195117351,-0.06548336407613911,0.16904983757893546,0.17625708674022608,0.04737232570530621,0.0077631124265970484,0.08812884023794132,-0.042034962178952424,0.06504749128270083,0.12413466775509305,0.02922543240751853,0.10186733519052744,-0.02247740667299616,0.13070421387328587,-0.212179871916329,0.011117990971613742,0.04458890972942214,-0.022289433408757,-0.10815832870284048,-0.11565745318651528,0.09970939947308968,0.02632709576835658,-0.01843320569780143,0.10768784683947003,0.1163447040100852,-0.05489306504850576,0.010304717158055686,0.016164029841766993,-0.04789800081726426,-0.005204416075037856,-0.0016918638318455907,0.026012625156853604,0.07502654650341291,0.16851560940620752,0.01546302966142743,-0.11485353970155507,-0.10951318404460178,-0.042180865374548265,-0.038354119798708314,-0.047079383375952515,0.06436585168248261,0.09332117995981803,-0.04795636601368582,-0.08948907238310932,0.06424124664869993,0.20037233818372774,0.0375737646850654,-0.08868355138819467,0.05203973334705156,0.06690264700468455,-0.06857452432118673,-0.18297947393637412,0.09150802717461723,-0.02954843693811137,0.017766002007620692,-0.055816301576341446,0.09111972171685569,0.05278072635472385,0.01170276266342294,-0.011563745959064592,0.003998273242597321,-0.002917082001222389,0.09727166559787738,0.0027524668178385975,-0.08894061160516452,0.02739824026513033,0.03618709371461267,0.12659908358228367,-0.05303660896699221,-0.004753255844362592,0.03654209659126921,-0.06604994011267154,0.03750955227490843,0.06488642546485268,-0.04320047198571486,0.08855548268579949,0.06032199741416942,0.04655773409514645,-0.0366643203249927,-0.07092443511157544,-0.04557088509558848,-0.05035642022478658,0.2115466837143951,-0.0440738114358251,0.04229066267841128,0.030756027777880657,-0.13344745993306206,-0.09183187473035898,0.06779334227671371,0.09156645100373877,0.13171161590827973,-0.08276340222923992,0.010928804117699142,0.10422763513970655,-0.025795142683589803,0.034393922132407835,-0.06558773442673059,0.03417755884298458,0.032591897874133316,-0.05153361317862399,-0.024510025996930238,0.07106990598649354,0.0019343504858305022,0.028584417533656703,-0.12293923754458377,0.04287410541152627,-0.056944490149541005,-0.06577457973898163,-0.09480854960098384,0.04934937068040745,0.0705725626097983,-0.214583775326283,0.06067476932830891,-0.04886021516556097,-0.02810463755008953,-0.1285782574824799,0.015047473665949399,-0.020897498497677552,-0.03606836616786978,-0.12107739275714062,0.021670349715919905,0.0012885340002994333,-0.05234570071644888,0.21039208649183763,-0.11600167979046451,0.05659500297649222,-0.02463412262962654,-0.06094059791981871,-0.10294526894341778,-0.018221897076181465,0.031724057747808745,-0.08692327184102937,-0.12479668746374592,0.12957214661146751,-0.011008352447137798,0.017471345980867636,-0.05745265315116182,0.04105065791254351,-0.07276639158699796,-0.0032958147331524634,-0.06951962396065278,0.03341010742597687,0.05845290097084081,0.02929941469490022,-0.014051409638065636,-0.03559109769201342,0.10008376795121465,0.028019236801824728,0.012045772753557647,0.05150673988731184,0.08061771827050979,0.07799992765818181,0.027853323242045088,0.046538980427875076,0.06788733212582027,-0.12004328002384218,0.030046991286091562,-0.06871805957970342,-0.08904745370342837,0.02118635331664976,0.0506965246701486,-0.1338100820478239,0.053851929913137864,-0.06931888195883253,-0.014822638411066472,-0.04547051379088391,0.05335701279183884,0.09256313286980444,0.05621632670287653,-0.16635754242983183,-0.016391831540471698,0.003704233730666714,0.047719115708685006,-0.13993708505271685,-0.09497679195547187,0.036729198775313755]}";

void setup() {
  size(512, 512);
  frameRate(3);
  fill(255);
  
  // setup Runway
  runway = new RunwayHTTP(this);
  // disable automatic polling: request data manually when a new frame is ready
  runway.setAutoUpdate(false);
}

void draw() {
  background(0);
  
  // display result (if any)
  if(runwayResult != null){
    image(runwayResult,0,0);
  }
  
  // display instructions
  text("press SPACE to request an image\npress 's' to save it disk",5,15);
}

void keyPressed(){
  if(key == ' '){
    // query a set vector
    runway.query(input);
  }
  if(key == 's' && runwayResult != null){
    runwayResult.save(dataPath("result.png"));
  }
}

// this is called when new Runway data is available
void runwayDataEvent(JSONObject runwayData){
  // point the sketch data to the Runway incoming data 
  String base64ImageString = runwayData.getString("image");
  // try to decode the image from
  try{
    PImage result = ModelUtils.fromBase64(base64ImageString);
    if(result != null){
      runwayResult = result;
    }
  }catch(Exception e){
    e.printStackTrace();
  }
}
